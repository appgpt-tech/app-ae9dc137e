//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Scripts: {
      name: 'Scripts',
      fields: {
        title: 'Title',
        genre: 'Genre',
        length: 'Length',
        scriptText: 'Script Text',
        id: 'id',
      },
    },
    Books: {
      name: 'Books',
      fields: {
        title: 'Title',
        genre: 'Genre',
        coverImage: 'Cover Image',
        id: 'id',
      },
    },
    Users: {
      name: 'Users',
      fields: {
        username: 'Username',
        emailAddress: 'Email Address',
        password: 'Password',
        id: 'id',
      },
    },
    Payments: {
      name: 'Payments',
      fields: {
        amount: 'Amount',
        paymentMethod: 'Payment Method',
        subscriptionType: 'Subscription Type',
        paymentStatus: 'Payment Status',
        id: 'id',
      },
    },
    Genres: { name: 'Genres', fields: { genreName: 'Genre Name', id: 'id' } },
  },
};
const frResources = {
  resources: {
    Scripts: {
      name: 'Scripts (fr)',
      fields: {
        title: 'Title (fr)',
        genre: 'Genre (fr)',
        length: 'Length (fr)',
        scriptText: 'Script Text (fr)',
        id: 'id',
      },
    },
    Books: {
      name: 'Books (fr)',
      fields: {
        title: 'Title (fr)',
        genre: 'Genre (fr)',
        coverImage: 'Cover Image (fr)',
        id: 'id',
      },
    },
    Users: {
      name: 'Users (fr)',
      fields: {
        username: 'Username (fr)',
        emailAddress: 'Email Address (fr)',
        password: 'Password (fr)',
        id: 'id',
      },
    },
    Payments: {
      name: 'Payments (fr)',
      fields: {
        amount: 'Amount (fr)',
        paymentMethod: 'Payment Method (fr)',
        subscriptionType: 'Subscription Type (fr)',
        paymentStatus: 'Payment Status (fr)',
        id: 'id',
      },
    },
    Genres: {
      name: 'Genres (fr)',
      fields: { genreName: 'Genre Name (fr)', id: 'id' },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
